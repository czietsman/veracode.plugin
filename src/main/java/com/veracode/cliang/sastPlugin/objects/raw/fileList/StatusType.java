//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.10.08 at 07:48:55 AM WIB 
//


package com.veracode.cliang.sastPlugin.objects.raw.fileList;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for StatusType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="StatusType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Pending Upload"/>
 *     &lt;enumeration value="Uploading"/>
 *     &lt;enumeration value="Purged"/>
 *     &lt;enumeration value="Uploaded"/>
 *     &lt;enumeration value="Missing"/>
 *     &lt;enumeration value="Partial"/>
 *     &lt;enumeration value="Invalid Checksum"/>
 *     &lt;enumeration value="Invalid Archive"/>
 *     &lt;enumeration value="Archive File Within Another Archive"/>
 *     &lt;enumeration value="Archive File with Unsupported Compression"/>
 *     &lt;enumeration value="Archive File is Password Protected"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "StatusType")
@XmlEnum
public enum StatusType {

    @XmlEnumValue("Pending Upload")
    PENDING_UPLOAD("Pending Upload"),
    @XmlEnumValue("Uploading")
    UPLOADING("Uploading"),
    @XmlEnumValue("Purged")
    PURGED("Purged"),
    @XmlEnumValue("Uploaded")
    UPLOADED("Uploaded"),
    @XmlEnumValue("Missing")
    MISSING("Missing"),
    @XmlEnumValue("Partial")
    PARTIAL("Partial"),
    @XmlEnumValue("Invalid Checksum")
    INVALID_CHECKSUM("Invalid Checksum"),
    @XmlEnumValue("Invalid Archive")
    INVALID_ARCHIVE("Invalid Archive"),
    @XmlEnumValue("Archive File Within Another Archive")
    ARCHIVE_FILE_WITHIN_ANOTHER_ARCHIVE("Archive File Within Another Archive"),
    @XmlEnumValue("Archive File with Unsupported Compression")
    ARCHIVE_FILE_WITH_UNSUPPORTED_COMPRESSION("Archive File with Unsupported Compression"),
    @XmlEnumValue("Archive File is Password Protected")
    ARCHIVE_FILE_IS_PASSWORD_PROTECTED("Archive File is Password Protected");
    private final String value;

    StatusType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static StatusType fromValue(String v) {
        for (StatusType c: StatusType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
