//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.09.14 at 08:42:26 AM MYT 
//


package com.veracode.cliang.sastPlugin.objects.raw.detailedReport;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for PolicyRuleType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="PolicyRuleType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Disallow Vulnerabilities by Severity"/>
 *     &lt;enumeration value="Disallow CVSS Score"/>
 *     &lt;enumeration value="Disallow Component Blacklist"/>
 *     &lt;enumeration value="Disallow Component by License Risk"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "PolicyRuleType")
@XmlEnum
public enum PolicyRuleType {

    @XmlEnumValue("Disallow Vulnerabilities by Severity")
    DISALLOW_VULNERABILITIES_BY_SEVERITY("Disallow Vulnerabilities by Severity"),
    @XmlEnumValue("Disallow CVSS Score")
    DISALLOW_CVSS_SCORE("Disallow CVSS Score"),
    @XmlEnumValue("Disallow Component Blacklist")
    DISALLOW_COMPONENT_BLACKLIST("Disallow Component Blacklist"),
    @XmlEnumValue("Disallow Component by License Risk")
    DISALLOW_COMPONENT_BY_LICENSE_RISK("Disallow Component by License Risk");
    private final String value;

    PolicyRuleType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static PolicyRuleType fromValue(String v) {
        for (PolicyRuleType c: PolicyRuleType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
